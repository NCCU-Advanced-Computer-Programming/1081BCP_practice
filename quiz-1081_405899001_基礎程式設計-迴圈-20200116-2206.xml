<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/1081_405899001_基礎程式設計的預設/迴圈</text>

    </category>
  </question>

<!-- question: 32139  -->
  <question type="coderunner">
    <name>
      <text>修正無窮迴圈</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">
<div class="O1">修正下列會產生無窮迴圈的程式，請猜測該程式碼想要達成的目標是什麼？並修改該程式為可正確執行的程式</div>
<div class="O1"></div>
<div class="O1">
<p><img src="@@PLUGINFILE@@/ch16_1.png" width="501" height="157" /></p>
</div>
<div class="O1"></div>
<div class="O1"></div>
</div>
</div>]]></text>
<file name="ch16_1.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>40.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template>__saved_input__ = input
def input(prompt=''):
    s = __saved_input__(prompt)
    print(s)
    return s
    
{{STUDENT_ANSWER}}


{{TEST.testcode}}</template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[num=8
guess=int(input("Guess my number: "))
while guess != num:
    guess = int(input("Guess again: "))
print("Right!")]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="2" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>8</text>
      </stdin>
      <expected>
                <text>Guess my number: 8
Right!</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>5
8</text>
      </stdin>
      <expected>
                <text>Guess my number: 5
Guess again: 8
Right!</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>5
6
8</text>
      </stdin>
      <expected>
                <text>Guess my number: 5
Guess again: 6
Guess again: 8
Right!</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>5
6
7
8</text>
      </stdin>
      <expected>
                <text>Guess my number: 5
Guess again: 6
Guess again: 7
Guess again: 8
Right!</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>5
12345678901234567890
6
7
8</text>
      </stdin>
      <expected>
                <text>Guess my number: 5
Guess again: 12345678901234567890
Guess again: 6
Guess again: 7
Guess again: 8
Right!</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

<!-- question: 32140  -->
  <question type="coderunner">
    <name>
      <text>列出6的倍數</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>請寫一段程式，將1到100之間，所有6的倍數顯示出來，</p>
<p>並在最後以print顯示 "The total count:" 以及總共有幾個數字。</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>30.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[count = 0
for i in range(1,100):
    if i % 6 == 0:
        count+=1
        print(i)
print("The total count:", count)]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>6
12
18
24
30
36
42
48
54
60
66
72
78
84
90
96
The total count: 16</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
    </testcases>
  </question>

<!-- question: 32141  -->
  <question type="coderunner">
    <name>
      <text>文字排列的三角形</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">
<div class="O1">請寫一段程式，提示字元"Input the height of triangle(&gt;=2): "，取得三角形的高度後，依據該高度產生文字排列的三角形，如範例所示。</div>
<div class="O1"></div>
<div class="O1"></div>
<div class="O1"></div>
<div class="O1"></div>
</div>
</div>]]></text>
<file name="ch16_1.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>40.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template>__saved_input__ = input
def input(prompt=''):
    s = __saved_input__(prompt)
    print(s)
    return s
    
{{STUDENT_ANSWER}}


{{TEST.testcode}}</template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[h=int(input("Input the height of triangle(>=2): "))
for i in range(1,h+1):
    print(" "*(h-i)+"*"*(2*i-1))]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="2" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>5</text>
      </stdin>
      <expected>
                <text><![CDATA[Input the height of triangle(>=2): 5
    *
   ***
  *****
 *******
*********]]></text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>2</text>
      </stdin>
      <expected>
                <text><![CDATA[Input the height of triangle(>=2): 2
 *
***]]></text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>3</text>
      </stdin>
      <expected>
                <text><![CDATA[Input the height of triangle(>=2): 3
  *
 ***
*****]]></text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>4</text>
      </stdin>
      <expected>
                <text><![CDATA[Input the height of triangle(>=2): 4
   *
  ***
 *****
*******]]></text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>6</text>
      </stdin>
      <expected>
                <text><![CDATA[Input the height of triangle(>=2): 6
     *
    ***
   *****
  *******
 *********
***********]]></text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>