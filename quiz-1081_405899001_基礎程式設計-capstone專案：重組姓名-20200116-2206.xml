<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/1081_405899001_基礎程式設計的預設/capstone專案：重組姓名</text>

    </category>
  </question>

<!-- question: 31788  -->
  <question type="coderunner">
    <name>
      <text>取最後一個字的長度</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">
<div class="O1">有一已初始化字串 word_list，內含多個英文字詞與空格，</div>
<div class="O1">請寫一段程式從 word_list 取出最後一個字詞，求得該字長度，將結果以print顯示出來。</div>
<div class="O1">word_list中字詞與字詞間空格不只一個，且整段字串前後可能也會留有空格。</div>
<div class="O1">提示：請參考字串的strip方法說明。</div>
<div class="O1"></div>
<div class="O1">本試題不會有無字詞的情形。</div>
<div class="O1"></div>
<div class="O1">如當 word_list = "  Hello   World  " 時，其執行結果為 5。</div>
</div>
</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>40.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template><![CDATA[import sys

def __indent_line(line, extra_space):
    """Add the given amount of extra space at the start (or remove, if negative)"""
    if extra_space >= 0:
        return extra_space * ' ' + line
    elif len(line) - len(line.lstrip()) >= -extra_space:
        return line[extra_space + 1 : ]
    else:
        raise Exception("Line '{}' has a negative indent!".format(line))
        

def __indent(code, num_spaces):
    """Indent the given code by some fixed amount such that the first non-blank
       line has 'num_spaces' spaces at the start.
    """
    lines = code.split('\n')
    non_empty_lines = [line for line in lines if line != '']
    if non_empty_lines:
        first = non_empty_lines[0]
        current_indent =  len(first) - len(first.lstrip())
        reqd_indent = num_spaces - current_indent
        indented_lines = [__indent_line(line, reqd_indent) for line in lines]
        return '\n'.join(indented_lines) + '\n'
    else:
        return code  # Empty

__skeleton__ = """
def lengthOfLastWord(word_list: str):
{0}  # Student code inserted here
"""

__student_answer__ = """{{ STUDENT_ANSWER | e('py') }}"""

try:
    __indented__answer__ = __indent(__student_answer__, 4) #indent one level (4 spaces)
except Exception as e:
    print(e, file=sys.stderr)
else:
    exec(__skeleton__.format(__indented__answer__) + '\n' + """{{ TEST.testcode | e('py') }}""")

SEPARATOR = "#<ab@17943918#@>#"

{% for TEST in TESTCASES %}
{{ TEST.testcode }}
{% if not loop.last %}
print(SEPARATOR)
{% endif %}
{% endfor %}]]></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer>s_strip=word_list.strip()
print(len(s_strip)-s_strip.rfind(' ')-1)</answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="2" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[lengthOfLastWord(word_list = "  Hello   World  ")]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>5</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[lengthOfLastWord(word_list = " Plan Do Check Act Plan Do")]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>2</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[lengthOfLastWord(word_list = " EatWorkPlaySleep ")]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>16</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[lengthOfLastWord(word_list = "Search Find Seek Discover")]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>8</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text><![CDATA[lengthOfLastWord(word_list = "  Eat DrinkSleepEat  ")]]></text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>13</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

<!-- question: 31785  -->
  <question type="coderunner">
    <name>
      <text>重組姓名</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">請寫一段程式，執行下列功能：</div>
<div class="O1">1. 接受輸入兩組姓名，分別提示：</div>
<div class="O1">"Enter one full name(FIRST LAST): "</div>
<div class="O1">"Enter another full name(FIRST LAST): "</div>
<div class="O1"></div>
<div class="O1">2. 將輸入的名(First name)從中間切半混合重組成新的名字，</div>
<div class="O1">也將輸入的姓(Last name)從中間切半混合重組成新的姓氏。</div>
<div class="O1"></div>
<div class="O1">3.依據輸入資料，將混合重組後的新姓名，將姓與名的第一個字母大寫其餘小寫，分兩行顯示在畫面上。</div>
<div class="O1"></div>
<div class="O1">例如：輸入 Aqua Man 和 Cat Woman，則輸出新姓名 Aqat Mman 和 Cua Woan</div>
</div>
<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>30.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template>__saved_input__ = input
def input(prompt=''):
    s = __saved_input__(prompt)
    print(s)
    return s
    
{{STUDENT_ANSWER}}


{{TEST.testcode}}</template>
    <iscombinatortemplate>0</iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[name1=input("Enter one full name(FIRST LAST): ")
name2=input("Enter another full name(FIRST LAST): ")

name1_space=name1.find(" ")
name1_first=name1[:name1_space]
name1_last=name1[name1_space+1:]

name2_space=name2.find(" ")
name2_first=name2[:name2_space]
name2_last=name2[name2_space+1:]

name1_first_half=int(len(name1_first)/2)
name1_last_half=int(len(name1_last)/2)

name2_first_half=int(len(name2_first)/2)
name2_last_half=int(len(name2_last)/2)

print((name1_first[:name1_first_half]+name2_first[name2_first_half:]).title(), \
      (name1_last[:name1_last_half]+name2_last[name2_last_half:]).title())
print((name2_first[:name2_first_half]+name1_first[name1_first_half:]).title(), \
      (name2_last[:name2_last_half]+name1_last[name1_last_half:]).title())]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>0</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Aqua Man
Cat Woman</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Aqua Man
Enter another full name(FIRST LAST): Cat Woman
Aqat Mman
Cua Woan</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>James Pond
Austin Powers</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): James Pond
Enter another full name(FIRST LAST): Austin Powers
Jatin Poers
Ausmes Pownd</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Clark Kent
Bruce Wayne</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Clark Kent
Enter another full name(FIRST LAST): Bruce Wayne
Cluce Keyne
Brark Want</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Moonandstarsandspace Knight
Sunandcloudsandbluesky Day</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Moonandstarsandspace Knight
Enter another full name(FIRST LAST): Sunandcloudsandbluesky Day
Moonandstasandbluesky Kniay
Sunandcloudrsandspace Dght</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Sting Bling
Sting Bling</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Sting Bling
Enter another full name(FIRST LAST): Sting Bling
Sting Bling
Sting Bling</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

<!-- question: 31786  -->
  <question type="coderunner">
    <name>
      <text>重組姓名 (不同處切段)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">請寫一段程式，執行下列功能：</div>
<div class="O1">1. 接受輸入兩組姓名，分別提示：</div>
<div class="O1">"Enter one full name(FIRST LAST): "</div>
<div class="O1">"Enter another full name(FIRST LAST): "</div>
<div class="O1"></div>
<div class="O1">2. 將輸入的名(First name)從1/3處(取四捨五入)切兩段混合重組成新的名字，</div>
<div class="O1">也將輸入的姓(Last name)從2/3處(取四捨五入)切兩段混合重組成新的姓氏。</div>
<div class="O1"></div>
<div class="O1">3.依據輸入資料，將混合重組後的新姓名，將姓與名的第一個字母大寫其餘小寫，分兩行顯示在畫面上。</div>
<div class="O1"></div>
<div class="O1">例如：輸入 Aqua Man 和 Cat Woman，則輸出新姓名 Aat Maan 和 Cqua Womn</div>
</div>
<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>30.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template>__saved_input__ = input
def input(prompt=''):
    s = __saved_input__(prompt)
    print(s)
    return s
    
{{STUDENT_ANSWER}}


{{TEST.testcode}}</template>
    <iscombinatortemplate>0</iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[name1=input("Enter one full name(FIRST LAST): ")
name2=input("Enter another full name(FIRST LAST): ")

name1_space=name1.find(" ")
name1_first=name1[:name1_space]
name1_last=name1[name1_space+1:]

name2_space=name2.find(" ")
name2_first=name2[:name2_space]
name2_last=name2[name2_space+1:]

name1_first_half=round(len(name1_first)/3)
name1_last_half=round(2*len(name1_last)/3)

name2_first_half=round(len(name2_first)/3)
name2_last_half=round(2*len(name2_last)/3)

print((name1_first[:name1_first_half]+name2_first[name2_first_half:]).title(), \
      (name1_last[:name1_last_half]+name2_last[name2_last_half:]).title())
print((name2_first[:name2_first_half]+name1_first[name1_first_half:]).title(), \
      (name2_last[:name2_last_half]+name1_last[name1_last_half:]).title())]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>0</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Aqua Man
Cat Woman</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Aqua Man
Enter another full name(FIRST LAST): Cat Woman
Aat Maan
Cqua Womn</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>James Pond
Austin Powers</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): James Pond
Enter another full name(FIRST LAST): Austin Powers
Jastin Ponrs
Aumes Powed</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Clark Kent
Bruce Wayne</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Clark Kent
Enter another full name(FIRST LAST): Bruce Wayne
Cluce Kenne
Brark Wayt</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Moonandstarsandspace Knight
Sunandcloudsandbluesky Day</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Moonandstarsandspace Knight
Enter another full name(FIRST LAST): Sunandcloudsandbluesky Day
Moonandloudsandbluesky Knigy
Sunandcstarsandspace Daht</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>Sting Bling
Sting Bling</text>
      </stdin>
      <expected>
                <text>Enter one full name(FIRST LAST): Sting Bling
Enter another full name(FIRST LAST): Sting Bling
Sting Bling
Sting Bling</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

<!-- question: 31787  -->
  <question type="coderunner">
    <name>
      <text>重組姓名 (中文詩句)[encode error]</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div class="O1">
<div class="O1">請寫一段程式，執行下列功能：</div>
<div class="O1">1. 接受輸入兩段詩句，分別提示：</div>
<div class="O1">"請輸入第一段: "</div>
<div class="O1">"請輸入第二段: "</div>
<div class="O1"></div>
<div class="O1">2. 每段詩句包含兩句以"，"分隔，請將每段的兩句詩分開並分別從中切半與另一段的兩句混合重組成新的句子。</div>
<div class="O1"></div>
<div class="O1">3.依據輸入資料，將混合重組後的兩段詩句，分兩行顯示在畫面上。</div>
<div class="O1"></div>
<div class="O1">例如：輸入 "床前明月光，疑似地上霜" 和 "舉頭望明月，低頭思故鄉"，<br />則輸出新句 "床前望明月，疑似思故鄉" 和 "舉頭明月光，低頭地上霜"</div>
</div>
<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>50.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <coderunnertype>python3</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>0</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>2</precheck>
    <showsource>0</showsource>
    <answerboxlines>8</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template><![CDATA[# -*- coding: utf-8 -*-
from __future__ import unicode_literals
import os
import locale
os.environ["PYTHONIOENCODING"] = "utf-8"

__saved_input__ = input
def input(prompt=''):
    s = __saved_input__(prompt.encode('utf-8','ignore'))
    print(s)
    return s
    
{{STUDENT_ANSWER}}


{{TEST.testcode}}]]></template>
    <iscombinatortemplate>0</iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[poem1=input("請輸入第一段: ")
poem2=input("請輸入第二段: ")

poem1_space=poem1.find("，")
poem1_first=poem1[:poem1_space]
poem1_last=poem1[poem1_space+1:]

poem2_space=poem2.find("，")
poem2_first=poem2[:poem2_space]
poem2_last=poem2[poem2_space+1:]

poem1_first_half=int(len(poem1_first)/2)
poem1_last_half=int(len(poem1_last)/2)
poem2_first_half=int(len(poem2_first)/2)
poem2_last_half=int(len(poem2_last)/2)

print(poem1_first[:poem1_first_half]+poem2_first[poem2_first_half:]+"，"+ \
      poem1_last[:poem1_last_half]+poem2_last[poem2_last_half:])
print(poem2_first[:poem2_first_half]+poem1_first[poem1_first_half:]+"，"+ \
      poem2_last[:poem2_last_half]+poem1_last[poem1_last_half:])]]></answer>
    <validateonsave>0</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>0</hoisttemplateparams>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>床前明月光，疑似地上霜
舉頭望明月，低頭思故鄉</text>
      </stdin>
      <expected>
                <text>請輸入第一段: 床前明月光，疑似地上霜
請輸入第二段: 舉頭望明月，低頭思故鄉
床前望明月，疑似思故鄉
舉頭明月光，低頭地上霜</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>紅豆生南國，春來發幾枝
願君多採擷，此物最相思</text>
      </stdin>
      <expected>
                <text>請輸入第一段: 紅豆生南國，春來發幾枝
請輸入第二段: 願君多採擷，此物最相思
紅豆多採擷，春來最相思
願君生南國，此物發幾枝</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>獨坐幽篁里，彈琴復長嘯
深林人不知，明月來相照</text>
      </stdin>
      <expected>
                <text>請輸入第一段: 獨坐幽篁里，彈琴復長嘯
請輸入第二段: 深林人不知，明月來相照
獨坐人不知，彈琴來相照
深林幽篁里，明月復長嘯</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>清明時節雨紛紛，路上行人欲斷魂
借問酒家何處有，牧童遙指杏花村</text>
      </stdin>
      <expected>
                <text>請輸入第一段: 清明時節雨紛紛，路上行人欲斷魂
請輸入第二段: 借問酒家何處有，牧童遙指杏花村
清明時家何處有，路上行指杏花村
借問酒節雨紛紛，牧童遙人欲斷魂</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="1" mark="1.0000000" >
      <testcode>
                <text></text>
      </testcode>
      <stdin>
                <text>月落烏啼霜滿天，江楓漁火對愁眠
姑蘇城外寒山寺，夜半鐘聲到客船</text>
      </stdin>
      <expected>
                <text>請輸入第一段: 月落烏啼霜滿天，江楓漁火對愁眠
請輸入第二段: 姑蘇城外寒山寺，夜半鐘聲到客船
月落烏外寒山寺，江楓漁聲到客船
姑蘇城啼霜滿天，夜半鐘火對愁眠</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>